apiVersion: appmesh.k8s.aws/v1beta2
kind: Mesh
metadata:
  name: my-eks-app
spec:
  egressFilter:
    type: ALLOW_ALL
  namespaceSelector:
    matchLabels:
      mesh: my-eks-app

---
apiVersion: v1
kind: Service
metadata:
  name: ingress-gw
  namespace: my-eks-app
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    #    service.beta.kubernetes.io/aws-load-balancer-internal: (http://service.beta.kubernetes.io/aws-load-balancer-internal:) "true"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8088
      name: http
  selector:
    app: ingress-gw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-gw
  namespace: my-eks-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ingress-gw
  template:
    metadata:
      labels:
        app: ingress-gw
    spec:
      serviceAccountName: pod-ssm-sa
      containers:
        - name: envoy
          image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.23.1.0-prod
          ports:
            - containerPort: 8088
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: ingress-gw
  namespace: my-eks-app
spec:
  namespaceSelector:
    matchLabels:
      gateway: ingress-gw
  podSelector:
    matchLabels:
      app: ingress-gw
  listeners:
    - portMapping:
        port: 8088
        protocol: http
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: GatewayRoute
metadata:
  name: my-app-gateway-route
  namespace: my-eks-app
spec:
  httpRoute:
    match:
      prefix: "/"
    action:
      target:
        virtualService:
          virtualServiceRef:
            name: my-app-virtual-service
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: my-app-virtual-node
  namespace: my-eks-app
spec:
  awsName: my-app-virtual-node
  podSelector:
    matchLabels:
      app: my-app
      version: v1
  listeners:
    - portMapping:
        port: 8080
        protocol: http
  serviceDiscovery:
    dns:
      hostname: my-app-service.my-eks-app.svc.cluster.local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-v2
  namespace: my-eks-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
      version: v2
  template:
    metadata:
      labels:
        app: my-app
        version: v2
    spec:
      serviceAccountName: pod-ssm-sa
      containers:
        - name: my-app-v2
          image: "dbaxy770928/fixed-nginx:latest"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-v2
  namespace: my-eks-app
  labels:
    app: my-app
    version: v2
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: my-app
    version: v2

---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: my-app-v2-virtual-node
  namespace: my-eks-app
spec:
  podSelector:
    matchLabels:
      app: my-app
      version: v2
  listeners:
    - portMapping:
        port: 8080
        protocol: http
  serviceDiscovery:
    dns:
      hostname: my-app-v2.my-eks-app.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  namespace: my-eks-app
  name: my-app-virtual-router
spec:
  awsName: my-app-virtual-router
  listeners:
    - portMapping:
        port: 8080
        protocol: http
  routes:
    - name: route-to-appserver
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: my-app-virtual-node
              weight: 80
            - virtualNodeRef:
                name: my-app-v2-virtual-node
              weight: 20
        retryPolicy:
            maxRetries: 2
            perRetryTimeout:
                unit: ms
                value: 2000
            httpRetryEvents:
                - server-error
                - client-error
                - gateway-error
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: my-app-virtual-service
  namespace: my-eks-app
spec:
  awsName: my-app-virtual-service.my-eks-app.svc.cluster.local
  provider:
      virtualRouter:
          virtualRouterRef:
              name: my-app-virtual-router

---
apiVersion: v1
kind: Service
metadata:
  name: my-app-virtual-service
  namespace: my-eks-app
  labels:
    app: my-app
spec:
  ports:
  - port: 8080
    name: http
